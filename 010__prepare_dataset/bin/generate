#!/usr/bin/env ruby
ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../../Gemfile', __dir__)
require 'bundler/setup'
Bundler.require(:default)

require 'aws-sdk-bedrockruntime'
require 'json'
require 'base64'
require 'dotenv'

# This will generate out images using Amazon Nova

# .envファイルから環境変数を読み込み
Dotenv.load(File.expand_path('../../.env', __dir__))

def generate_image(prompt, filename)
  puts "Generating... #{filename}"

  # Bedrockクライアントを作成
  bedrock = Aws::BedrockRuntime::Client.new

  # リクエストボディ
  # https://docs.aws.amazon.com/bedrock/latest/userguide/bedrock-runtime_example_bedrock-runtime_InvokeModel_AmazonNovaImageGeneration_section.html
  request_body = {
    taskType: "TEXT_IMAGE",
    textToImageParams: {
      text: prompt
    },
    imageGenerationConfig: {
      numberOfImages: 1,
      quality: "standard",
      cfgScale: 8.0,
      seed: 0,
      width: 1024,
      height: 1024
    }
  }
  puts request_body

  # Nova Canvasモデルを呼び出し
  response = bedrock.invoke_model({
    model_id: "amazon.nova-canvas-v1:0",
    body: request_body.to_json,
    content_type: "application/json"
  })
  result = JSON.parse(response.body.read)


  # Base64画像データをデコードして保存
  if result['images'] && result['images'].first
    image_data = Base64.decode64(result['images'].first)
    File.open(filename, 'wb') { |f| f.write(image_data) }
  end
end

generate_image(ENV['IMAGE_IDEA_1'], 'outputs/images/image_1.png')
#generate_image(ENV['IMAGE_IDEA_2'], 'outputs/images/image_2.png')
#generate_image(ENV['IMAGE_IDEA_3'], 'outputs/images/image_3.png')
#generate_image(ENV['IMAGE_IDEA_4'], 'outputs/images/image_4.png')
#generate_image(ENV['IMAGE_IDEA_5'], 'outputs/images/image_5.png')